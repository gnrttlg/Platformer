class Enemy(pygame.sprite.Sprite):
    def __init__(self, x, y, isFacingRight, imgs_right, imgs_left, acc_multiplier=1, hp=1):
        super().__init__()
        # добавляем объект в списки коллайдеров, всех спрайтов и наносящих урон объектов (damagers)

        # Все параметры, которые пришли в конструктор, сохраняем в поля класса. Задаем self.image, получаем
        # self.rect, устанавливаем ему координаты x и у


        # Задаем self.vel и self.acc аналогично персонажу

        # Создаем селф.граунддетектор размеров 1 на 1 пиксель


        # Здесь создаем поля для анимации self.frame и self.current_imgs

    def update(self):
        self.oldY = self.rect.y
        self.oldX = self.rect.x
        self.move()
        self.checkCollisions()
        self.checkGround()
        self.animate()


    def move(self):
        pass
        # Код такой же, как у игрока, за исключением того, что ускорение задается не нажатием кнопок, а в зависимости от значения self.isFacingRight
        # Ускорение задается не чистое АСС, а умноженное на acc_multiplier

    def checkGround(self):
        pass
        # Если персонаж смотрит вправо, апдейтим граунддетектор в координатах на 1 пиксель справа и на один пиксель вниз от его ректа
        # Иначе апдейтим граунддетектор в координатах на 1 пиксель слева и на один пиксель вниз от его ректа
        # Если у граунддетектора нет пересечений с коллайдерами, меняем значение self.isFacingRight на противоположное



    def checkCollisions(self):
        global P1
        pass
        # Передаем переменную игрока через глобал
        # Столкновения по y проверяем аналогично персонажу
        # При проверке столкновений по х игнорируем помимо селф также игрока
        # При столкновении по х помимо возвращения старой координаты обнуляем self.vel и меняем значение self.isFacingRight на противоположное


    def animate(self):
        # текущий набор картинок устанавливаем исходя из значения self.isFacingRight и анимируем
        pass


# Дополнительное задание: Попробуйте добавить персонажу потерю жизни при столкновении с врагом. При потере жизни 
# персонаж подпрыгивает и проваливается вниз, через некоторое время возрождаясь на старте